<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>λ</title>
    <link>/</link>
    <description>Recent content on λ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © blog.marcb.pro 2020</copyright>
    <lastBuildDate>Fri, 01 Jan 2021 10:29:49 +0100</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Handling duplicated routes in Vue.js</title>
      <link>/posts/vue_router_duplicated_route_error/</link>
      <pubDate>Fri, 01 Jan 2021 10:29:49 +0100</pubDate>
      
      <guid>/posts/vue_router_duplicated_route_error/</guid>
      <description>For one of my side projects, I&amp;rsquo;m using Vue.js[2] to develop a web client. Vue.js offers an official router for the framework called Vue Router[3].
In order to navigate between Views, the framework offers the following function:
router.push({ name: &amp;#39;home&amp;#39;}) But what happens if we are already in the view home? We get the following nasty error:
NavigationDuplicated { _name: &amp;#34;NavigationDuplicated&amp;#34;, name: &amp;#34;NavigationDuplicated&amp;#34;, message: &amp;#34;Navigating to current location (&amp;#34;/home&amp;#34;) is not allowed&amp;#34;, stack: &amp;#34;Error at new NavigationDuplicated (webpack-int…/node_modules/vue/dist/vue.</description>
    </item>
    
    <item>
      <title>The magic of SSH Remote Forwarding</title>
      <link>/posts/linux/the_magic_of_ssh_remote_forwarding/</link>
      <pubDate>Fri, 11 Dec 2020 15:23:25 +0100</pubDate>
      
      <guid>/posts/linux/the_magic_of_ssh_remote_forwarding/</guid>
      <description>These past days I&amp;rsquo;ve been setting up a Raspberry Pi running some services in my room. I wanted to access them from outside the house&amp;rsquo;s network but unfortunately, I don&amp;rsquo;t have access to the router.
I could have set up a VPN client into the Pi but it is running a very minimal OS to which I cannot install packages.
Fortunately, SSH has an option for Remote port forwarding which allowed me to solve this problem.</description>
    </item>
    
    <item>
      <title>How to know which CPUs have been allocated to a job?</title>
      <link>/posts/linux/slurm-cpu-id/</link>
      <pubDate>Fri, 11 Dec 2020 10:23:25 +0100</pubDate>
      
      <guid>/posts/linux/slurm-cpu-id/</guid>
      <description>TL;DR We can get the abstract CPU IDs that Slurm allocated for a job through scontrol[4]:
$ scontrol show job -d $SLURM_JOBID ... Nodes=node CPU_IDs=0-4,8-9 Mem=128000 GRES_IDX= ... This will list all the information regarding the job, including the CPU IDs. The problem is that these IDs do not match the actual physical cores (which is what commands such as htop show us)[3]. To match these abstract IDs to the physical ones, we need to check the output of the command lstopo:</description>
    </item>
    
    <item>
      <title>Ldap Triggers</title>
      <link>/posts/ldap-triggers/</link>
      <pubDate>Sat, 09 May 2020 00:32:37 +0200</pubDate>
      
      <guid>/posts/ldap-triggers/</guid>
      <description>For up to date information check the project&amp;rsquo;s repository: LDAP Triggers (https://github.com/marcbenedi/ldap-triggers)
 Abstract LDAP Triggers (https://github.com/marcbenedi/ldap-triggers) is an Open Source python package under MIT license which triggers an action every time an LDAP action is done. The current supported actions are creation/deletion of users/groups.
It comes with very clear documentation and it&amp;rsquo;s very easy to set up.
What is LDAP? LDAP (Lightweight Directory Access Protocol) is a protocol for accessing and managing a ditributed directory information over a network.</description>
    </item>
    
  </channel>
</rss>
